{"version":3,"sources":["utils/SeatMap.js","theme/vars.js","components/Aisle.js","context/SeatContext.js","components/AvailableSeat.js","components/UnavailableSeat.js","components/Row.js","components/Legend.js","components/Group.js","components/Airplane.js","serviceWorker.js","index.js","App.js"],"names":["determineClassRank","cabinClass","seatSort","a","b","aCabinClass","class","bCabinClass","row","seat","getSeatMap","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","res","data","wrap","_context","prev","next","fetch","method","sent","json","ok","length","abrupt","sort","stop","apply","this","arguments","prepareRow","aisleLocation","rowNum","forEach","aisle","splice","concat","getRowData","filter","c","color","seatStyle","height","width","boxSizing","borderRadius","margin","border","seatStyleLg","textStyle","background","fontSize","textAlign","textStyleLg","StyledAisle","styled","div","_templateObject","Aisle","children","react_default","createElement","SeatContext","createContext","SeatContextProvider","_useState","useState","selectedSeat","_useState2","slicedToArray","state","setState","Provider","value","StyledSeat","button","AvailableSeat_templateObject","props","selected","AvailableSeat","seatA","seatB","seatInfo","_useContext","useContext","_useContext2","isSelected","onClick","objectSpread","UnavailableSeat","span","UnavailableSeat_templateObject","StyledRow","Row_templateObject","Row","rowData","map","s","Fragment","key","components_Aisle","occupied","components_UnavailableSeat","components_AvailableSeat","StyledSeatLegend","Legend_templateObject","StyledGroupLegend","_templateObject2","GroupLegend","SeatLegend","_ref2","Group","startingRow","rowMax","aisleLocations","firstRowObj","rowSeatArr","cabinRow","seatData","seatDataExists","toConsumableArray","Set","r","cabinSeats","control","aisles","i","indexOf","push","getAisles","_defineRows","rowsArr","rowList","defineRows","Legend_GroupLegend","Legend_SeatLegend","keys","components_Row","StyledAirplane","Airplane_templateObject","Airplane","seatMap","cabinClasses","_this$state","Group_Group","cabin","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","SeatContext_SeatContextProvider","Airplane_Airplane","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ed5d56e3.chunk.js","sourcesContent":["export const seatMapUrl = 'https://s3.amazonaws.com/frontend-candidate-homework.lola.co/seats.json';\n\nconst determineClassRank = cabinClass => {\n  switch (cabinClass) {\n    case 'First':\n      return 1;\n    case 'Business':\n      return 2;\n    default:\n      return 3;\n  }\n};\n\nexport const seatSort = (a, b) => {\n  const aCabinClass = determineClassRank(a.class);\n  const bCabinClass = determineClassRank(b.class);\n\n  if (aCabinClass < bCabinClass) {\n    return -1;\n  }\n  if (aCabinClass > bCabinClass) {\n    return 1;\n  }\n  if (a.row < b.row) {\n    return -1;\n  }\n  if (a.row > b.row) {\n    return 1;\n  }\n  if (a.seat < b.seat) {\n    return -1;\n  }\n  if (a.seat > b.seat) {\n    return 1;\n  }\n  return 0;\n};\n\nexport const getSeatMap = async () => {\n  const res = await fetch(seatMapUrl, {\n    method: 'get'\n  });\n  const data = await res.json();\n\n  if (res.ok && data.length) {\n    return data.sort(seatSort);\n  }\n};\n\nexport const compareSeat = (seatA, seatB) => {\n  if (seatA.class === seatB.class) {\n    if (seatA.row === seatB.row) {\n      if (seatA.seat === seatB.seat) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const prepareRow = (row, aisleLocation, rowNum) => {\n  return aisleLocation.forEach(aisle =>\n    row.splice(aisle, 0, { row: rowNum, aisle: true, seat: `RA${aisle}` })\n  );\n};\n\nexport const getCabinClasses = cabin => {\n  return [...new Set(cabin.map(c => c.class))];\n};\n\nexport const getClassData = (cabin, cabinClass) => {\n  return cabin.filter(c => c.class === cabinClass);\n};\n\nexport const getCabinRows = cabinClass => {\n  return [...new Set(cabinClass.map(c => c.row))];\n};\n\nexport const getRowData = (cabinClass, row) => {\n  return cabinClass.filter(c => c.row === row);\n};\n\nexport const getCabinSeats = cabinRow => {\n  return [...new Set(cabinRow.map(r => r.seat))];\n};\n\nexport const getAisles = cabinSeats => {\n  const control = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L'];\n  let aisles = [];\n  for (var i = 0; i < cabinSeats.length; i++) {\n    if (cabinSeats.indexOf(control[i]) === -1) {\n      aisles.push(i);\n    }\n  }\n  return aisles;\n};\n\n// Create an object of arrays {[row1: [seats], [row2: [seats]], ...]}\n// and define the identifier row at the top of the group\nexport const defineRows = (seatData, rowMax, startingRow, aisleLocation) => {\n  const rowsArr = {};\n  let rowList = [];\n  for (let i = startingRow; i < rowMax; i++) {\n    rowsArr[`row${i}`] = getRowData(seatData, i);\n    prepareRow(rowsArr[`row${i}`], aisleLocation, i);\n    if (i === startingRow) {\n      rowsArr[`row${i}`].map(r => rowList.push(r.seat));\n    }\n  }\n  return { rowsArr, rowList };\n};\n","export const color = {\n  primary: '#7C2A8B',\n  secondary: '#E83597',\n  accent01: '#1A60E8',\n  accent02: '#F7C429',\n  white: '#FFF',\n  lightGray: '#DCDDDF',\n  textGray: '#48494A'\n};\n\nexport const seatStyle = {\n  height: '18px',\n  width: '18px',\n  boxSizing: 'border-box',\n  borderRadius: '2px',\n  margin: '4px 8px',\n  border: '2px solid transparent'\n};\n\nexport const seatStyleLg = {\n  height: '24px',\n  width: '24px'\n};\n\nexport const textStyle = {\n  background: 'transparent',\n  border: 'none',\n  fontSize: '14px',\n  color: color.textGray,\n  textAlign: 'center'\n};\n\nexport const textStyleLg = {\n  fontSize: '16px'\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { seatStyle, seatStyleLg, textStyle, textStyleLg } from '../theme/vars';\n\nconst StyledAisle = styled.div`\n  ${seatStyle};\n  ${textStyle};\n\n  @media screen and (min-width: 500px) {\n    ${seatStyleLg};\n    ${textStyleLg};\n  }\n`;\n\nconst Aisle = ({ children }) => {\n  return <StyledAisle>{children}</StyledAisle>;\n};\n\nexport default Aisle;\n","import React, { createContext, useState } from 'react';\n\nexport const SeatContext = createContext([{}, () => {}]);\n\nexport const SeatContextProvider = ({ children }) => {\n  const [state, setState] = useState({\n    selectedSeat: { row: '', seat: '', class: '' }\n  });\n  return <SeatContext.Provider value={[state, setState]}>{children}</SeatContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { SeatContext } from '../context/SeatContext';\nimport { compareSeat } from '../utils/SeatMap';\nimport { color, seatStyle, seatStyleLg } from '../theme/vars';\n\nconst StyledSeat = styled.button`\n  ${seatStyle};\n  background: ${props => (props.selected ? color.secondary : color.accent01)};\n  :focus {\n    outline: none;\n    border: 2px solid ${color.accent01};\n  }\n  @media screen and (min-width: 500px) {\n    ${seatStyleLg};\n  }\n`;\n\n// Check out this handy use of context + hooks! 🦄\nconst AvailableSeat = ({ seatInfo }) => {\n  const [state, setState] = useContext(SeatContext);\n  const isSelected = compareSeat(seatInfo, state.selectedSeat);\n  return (\n    <StyledSeat\n      selected={isSelected}\n      onClick={() => setState(state => ({ ...state, selectedSeat: seatInfo }))}\n    />\n  );\n};\n\nexport default AvailableSeat;\n","import styled from 'styled-components';\nimport { color, seatStyle, seatStyleLg } from '../theme/vars';\n\nconst UnavailableSeat = styled.span`\n  ${seatStyle};\n  display: inline-block;\n  background: ${color.lightGray};\n  cursor: not-allowed;\n  @media screen and (min-width: 500px) {\n    ${seatStyleLg};\n  }\n`;\n\nexport default UnavailableSeat;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Aisle from './Aisle';\nimport AvailableSeat from './AvailableSeat';\nimport UnavailableSeat from './UnavailableSeat';\n\nconst StyledRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\n// It helps to have a reminder about what the data looks like\n// rowData: [{seat: \"A\", row: 1, class: \"First\", occupied: false}, ...]\n// I admit, this component isn't the most readible\n// TODO: Make this less fragmented (get it?)\nconst Row = ({ rowData }) => {\n  return (\n    <StyledRow>\n      {rowData.map(s => (\n        <React.Fragment key={s.row + s.seat}>\n          {s.aisle ? (\n            <Aisle>{s.row}</Aisle>\n          ) : (\n            <React.Fragment>\n              {s.occupied ? (\n                <UnavailableSeat />\n              ) : (\n                <AvailableSeat seatInfo={{ seat: s.seat, row: s.row, class: s.class }} />\n              )}\n            </React.Fragment>\n          )}\n        </React.Fragment>\n      ))}\n    </StyledRow>\n  );\n};\n\nexport default Row;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { seatStyle, seatStyleLg, textStyle, textStyleLg } from '../theme/vars';\n\nconst StyledSeatLegend = styled.span`\n  ${seatStyle};\n  ${textStyle};\n\n  @media screen and (min-width: 500px) {\n    ${seatStyleLg};\n    ${textStyleLg};\n  }\n`;\n\nconst StyledGroupLegend = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nexport const GroupLegend = ({ children }) => <StyledGroupLegend>{children}</StyledGroupLegend>;\n\nexport const SeatLegend = ({ children }) => <StyledSeatLegend>{children}</StyledSeatLegend>;\n","import React from 'react';\nimport Row from './Row';\nimport { GroupLegend, SeatLegend } from './Legend';\nimport { defineRows, getRowData, getCabinSeats, getAisles } from '../utils/SeatMap';\n\nexport const Group = ({ seatData }) => {\n  const seatDataExists = seatData.length;\n  let startingRow, rowMax, aisleLocations, firstRowObj, rowSeatArr;\n  if (seatDataExists) {\n    startingRow = seatDataExists ? seatData[0].row : null;\n    firstRowObj = getRowData(seatData, startingRow);\n    rowSeatArr = getCabinSeats(firstRowObj);\n    rowMax = seatDataExists ? seatData.length / firstRowObj.length + startingRow : null;\n    aisleLocations = seatDataExists ? getAisles(rowSeatArr) : null;\n  }\n\n  const { rowList, rowsArr } = defineRows(seatData, rowMax, startingRow, aisleLocations);\n\n  return (\n    <React.Fragment>\n      <GroupLegend>\n        {rowList.map(seat =>\n          seat.length === 1 ? <SeatLegend key={seat}>{seat}</SeatLegend> : <SeatLegend key={seat} />\n        )}\n      </GroupLegend>\n\n      {Object.keys(rowsArr).map(r => (\n        <Row key={r} rowData={rowsArr[r]} />\n      ))}\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { getSeatMap, getClassData } from '../utils/SeatMap';\nimport { Group } from './Group';\n\nconst StyledAirplane = styled.div`\n  @import url('https://fonts.googleapis.com/css?family=Poppins:400,700');\n\n  padding: 0;\n  margin: 0;\n  font-family: Poppins, sans-serif;\n  box-sizing: border-box;\n`;\n\nclass Airplane extends React.Component {\n  state = {\n    seatMap: [],\n    cabinClasses: ['First', 'Business', 'Economy']\n  };\n\n  async componentDidMount() {\n    const data = await getSeatMap();\n    this.setState({\n      seatMap: data\n    });\n  }\n\n  render() {\n    const { seatMap, cabinClasses } = this.state;\n    return (\n      <StyledAirplane>\n        {cabinClasses.map(c => (\n          <Group key={c} seatData={getClassData(seatMap, c)} />\n        ))}\n      </StyledAirplane>\n    );\n  }\n}\nexport { Airplane };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Airplane } from './components/Airplane';\n\nimport { SeatContextProvider } from './context/SeatContext';\n\nexport default () => {\n  return (\n    <SeatContextProvider>\n      <Airplane />\n    </SeatContextProvider>\n  );\n};\n"],"sourceRoot":""}